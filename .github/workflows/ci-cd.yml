name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:

  BUILD_TYPE: Release

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
       submodules: recursive 

    # - name: Install dependencies
    #   run: pip install --user cpp-coveralls
    # - name: Install dependencies
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y lcov

    # - name: Set up Python 3.8 for gcovr
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: 3.13

    # - name: Install dependencies
    #   run: |
    #     pip install cpp-coveralls

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Run tests
      run: ${{github.workspace}}/build/tests/tests && cd ${{github.workspace}}/build/tests && ctest --output-on-failure 

    - name: Coverage
      run: |
        cd build
        make
        tests/tests
        make cov-test
    # - name: Coverage
    #   run: | 
    #     cpp-coveralls --exclude third-party  --exclude banking  --exclude lib --exclude CMakeFiles
    #     cpp-coveralls -b ${{github.workspace}}/build/tests

    # - name: Collect coverage into one XML report
    #   run: |
    #     gcovr --coveralls > coverage.info

    # - name: Coverage
    #   run: |
    #     lcov --directory . --capture --output-file coverage.info --ignore-errors mismatch
    #     lcov --remove coverage.info 'test*/*' '/usr/*' --output-file coverage.info
    #     lcov --list coverage.info

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: ${{github.workspace}}/build/tests/coverage.info
        github-token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Coveralls
    #   run: coveralls -t ${{ secrets.coveralls_token }} --root . -E ".*external.*" -E ".*tests.*"
    # - name: Coveralls
    #   run: ./configure --enable-gcov && make && make check
    # - name: Coverage
    #   run: coveralls --root . -E ".*gtest.*" -E ".*CMakeFiles.*"
    # - name: Coverage
    #   working-directory: ${{github.workspace}}/build/tests
    #   run: gcov test-coverage

    # - name: Coveralls
    #   uses: coverallsapp/github-action@master
    #   with:
    #     path-to-lcov: ${{github.workspace}}/build/tests/coverage.info
    #     github-token: ${{ secrets.GITHUB_TOKEN }}